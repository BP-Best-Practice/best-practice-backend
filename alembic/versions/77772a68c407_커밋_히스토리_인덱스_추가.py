"""커밋 히스토리 인덱스 추가

Revision ID: 77772a68c407
Revises: dd6044f66bed
Create Date: 2025-08-31 12:44:44.235502

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '77772a68c407'
down_revision: Union[str, Sequence[str], None] = 'dd6044f66bed'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    #op.drop_table('user')
    op.alter_column('commit_history', 'repository_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.create_index('idx_commit_cached_at', 'commit_history', ['cached_at'], unique=False)
    op.create_index('idx_commit_repo_author', 'commit_history', ['repository_id', 'author_email'], unique=False)
    op.create_index('idx_commit_repo_date', 'commit_history', ['repository_id', 'committed_at'], unique=False)
    op.create_index('idx_commit_repo_sha', 'commit_history', ['repository_id', 'commit_sha'], unique=True)
    op.drop_constraint(op.f('pr_generation_user_id_fkey'), 'pr_generation', type_='foreignkey')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(op.f('pr_generation_user_id_fkey'), 'pr_generation', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index('idx_commit_repo_sha', table_name='commit_history')
    op.drop_index('idx_commit_repo_date', table_name='commit_history')
    op.drop_index('idx_commit_repo_author', table_name='commit_history')
    op.drop_index('idx_commit_cached_at', table_name='commit_history')
    op.alter_column('commit_history', 'repository_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    # op.create_table('user',
    # sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    # sa.Column('github_id', sa.BIGINT(), autoincrement=False, nullable=False),
    # sa.Column('github_access_token', sa.TEXT(), autoincrement=False, nullable=False),
    # sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    # sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('display_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('avatar_url', sa.TEXT(), autoincrement=False, nullable=True),
    # sa.Column('subscription_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    # sa.Column('monthly_usage_count', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('preferences', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    # sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('last_login_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name=op.f('user_pkey')),
    # sa.UniqueConstraint('github_id', name=op.f('user_github_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    # )
    # ### end Alembic commands ###
